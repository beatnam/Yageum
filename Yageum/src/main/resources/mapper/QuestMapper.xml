<?xml version="1.0" encoding="UTF-8"?>

<!-- https://mybatis.org/mybatis-3/getting-started.html
src/main/resources/mapper폴더/MemberMapper.xml파일 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yageum.mapper.QuestMapper">

	<select id="searchMemberIn" resultType="java.lang.Integer">
		select member_in
		from member
		where member_id = #{memberId}

	</select>

	<insert id="acceptQuest">
		insert into quest_state
		values(#{memberIn}, #{questIn}, #{qpIn}, #{qsSuccessDate},
		#{rewardDate})

	</insert>

	<select id="listQuest" resultType="map">
		select quest_in, quest_name, quest_type_name,
		goal_value, reward_value, start_date, end_date, is_valid
		from quest q
		join quest_type t
		on q.quest_type_in = t.quest_type_in
		where quest_in not in (select quest_in from quest_state where member_in
		= #{memberIn})
	</select>

	<select id="myQuest" resultType="map">
		select q.quest_in, quest_name, quest_type_name, qp_name,
		reward_value, start_date, end_date
		from quest q
		join quest_type t
		on q.quest_type_in = t.quest_type_in
		join quest_state s
		on s.quest_in = q.quest_in
		join quest_progress p
		on s.qp_in = p.qp_in

		where s.quest_in in (select s.quest_in from quest_state where
		s.member_in =
		#{memberIn})

		order by s.qp_in
	</select>

	<select id="listItem" resultType="com.yageum.domain.ItemDTO">
		select *
		from item

	</select>

	<select id="myReward" resultType="java.lang.Integer">
		select member_reward
		from member
		where member_id = #{memberId}

	</select>

	<update id="buyItemUser" parameterType="map">
		update member
		set member_reward = member_reward - #{itemPrice}
		where member_id = #{memberId}
	</update>

	<insert id="buyItemTransaction" parameterType="map">
		insert transaction(member_in, item_in, transaction_date)
		values(#{memberIn}, #{itemIn}, #{transactionDate})
	</insert>

	<select id="getItemInfo" resultType="com.yageum.domain.ItemDTO">
		select *
		from item
		where item_in = #{itemIn}
	</select>

	<select id="listQuestType2" resultType="map">
		select m.member_in, s.quest_in, member_straight, q.goal_value, s.qp_in,
		q.reward_value
		from quest_state s join quest q
		on s.quest_in = q.quest_in
		join member m
		on m.member_in = s.member_in
		where m.member_in = #{memberIn} and quest_type_in = 2;
	</select>

	<select id="listQuestType3" resultType="map">
		select m.member_in, s.quest_in, member_expense, q.goal_value, s.qp_in,
		q.reward_value
		from quest_state s join quest q
		on s.quest_in = q.quest_in
		join member m
		on m.member_in = s.member_in
		where m.member_in = #{memberIn} and quest_type_in = 3;
	</select>

	<select id="listQuestType4" resultType="map">
		select s.member_in, s.quest_in, q.cm_in, q.goal_value, s.qp_in, q.reward_value
		from quest_state s join quest q
		on s.quest_in = q.quest_in
		where q.quest_type_in = 4
	</select>

	<update id="successQuestType">
		update quest_state
		set qp_in = 3 , qs_success_date = #{qsSuccessDate}
		where member_in = #{memberIn} and quest_in = #{questIn}
	</update>

	<update id="memberReward">
		update member
		set member_reward = member_reward + #{rewardValue}
		where member_in = #{memberIn}
	</update>

	<select id="sumFromExpense" resultType="java.lang.Integer">
		select sum(expense_sum)
		from expense e join category_sub s
		on e.cs_in = s.cs_in
		where member_in = #{memberIn} and s.cm_in = #{cmIn}
				and month(expense_date) = (select month(end_date)
										   from quest
										   where quest_in= #{questIn})
	</select>

</mapper>